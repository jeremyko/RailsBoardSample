RailsBoard 작성하기

 먼저 기존방식처럼 작성하고 REST로 작성해본다.
 먼저 완성하고, validation check 추가.
 자바스크립트 사용을 cofee script로 대체.


* database.yml 파일 수정


* 컨트롤러 및 뷰 작성

  	rails g controller board index 수행

	rails g (generate) 명령을 사용하면, 컨트롤러 및 액션, 뷰까지 한번에 생성 가능하다.
	board 컨트롤러를 생성하고, index Action(함수) 을 생성한다.
    컨트롤러와 같이 뷰도 자동으로 생성이 되는데,
    D:\Ruby_Dev\RailsBoard\app\views\board\index.html.erb 이다.
	erb 는 embedded ruby 를 나타낸다.
	이때 public/index.html 를 삭제해야, 내가 정의한 뷰가 보여진다.

	route.rb 에서 # get "home/index" 주석 처리,
	root :to => 'board#index'  로 수정.
	사이트의 root가 board 컨트롤러의 index 함수(Action)으로 요청이 들어온다.

* model을 작성한다.

	rails g model MyRailsBoardRow subject:string name:string mail:string memo:string hits:integer

	그 결과로 migration 이 생성된다. (실제 DB변경이 발생하는것은 아님) 이를 통해 DB의 점진적인 변경사항을 추적할수 있다. change method 를 가지고 있다.
	\db\migrate\20120822082348_create_my_rails_boards.rb 파일이 생성된다.
	model을 실제 DB에 반영하기 위해서(DB에 변경사항이 발생하는 작업 수행)

	bundle exec rake db:migrate 수행.

	오라클에서 실제 생성된 테이블은 다음과 같다.
	CREATE TABLE  "MY_RAILS_BOARD_ROWS"
   	(	"ID" NUMBER(38,0) NOT NULL ENABLE,
		"SUBJECT" VARCHAR2(255 CHAR),
		"NAME" VARCHAR2(255 CHAR),
		"MAIL" VARCHAR2(255 CHAR),
		"MEMO" VARCHAR2(255 CHAR),
		"HITS" NUMBER(38,0),
		"CREATED_AT" DATE NOT NULL ENABLE,
		"UPDATED_AT" DATE NOT NULL ENABLE,
	 	PRIMARY KEY ("ID") ENABLE
   	) ;

   	흥미로운것은 모델 이름을 단수로 정의했는데, 실제 만들어지는 테이블 명은 그것의 복수형(s)이 된다.
    곰곰 생각해보면 이러한 명명법이 맞긴 하다. 데이터베이스는 집합이므로 즉 복수..
    내가 생성한 모델은 그 집합을 이루는 각각의 요소 하나, 즉 단수형..


* 컨트롤러에서 뷰에게 넘겨줄 데이터를 구한다. Rails 에서는 순서가 컨트롤러에서 뷰로 처리된다. 컨트롤러에서 아무 작업을 하지 않아도 뷰가 호출이 된다 (정적 페이지)

class HomeController < ApplicationController
  def index
    @boardList = MyRailsBoard.all
    @totalCnt = MyRailsBoard.all.count
    @current_page = 1
  end
end

* views\home\index.html.erb 를 다음처럼 수정한다. 이 화면이 최초 보여지는 전체 게시물 출력 화면이다



